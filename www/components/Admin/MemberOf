<%doc>
# $Header: /tmp/netpass/NetPass/www/components/Admin/MemberOf,v 1.5 2006/02/07 19:54:33 jeffmurphy Exp $

#   (c) 2004 University at Buffalo.
#   Available under the "Artistic License"
#   http://www.gnu.org/licenses/license-list.html#ArtisticLicense

	$m->comp(..., 'group' => 'default', 'acl' => 'Admin' )
	$m->comp(..., 'group' => 'default', 'acl' => [ 'Reports', 'UserEditor' ])

	If 'group' is not specified, then we will indicate whether or not
	you possess the specified ACL at any priviledge level. We will return
	a list of groups that match the given ACL in that case. The list (arrayref)
        will be returned as a second RV. 

	Returns 1 if you have the specified Access Control for the given 
	group(s). Returns 0 otherwise.
 
</%doc>

<%args>
	$group => '';
	$acl   => '';
</%args>

<%perl>

	my $D = 0;
	if (0) { #($m->session->{'username'} eq "jefftest") {
		$D = 1;
		use Data::Dumper;

		print "<PRE>mygroups: ", Dumper($m->session->{'my_groups'}), "\n";
		print "group $group\n";
		print "acl $acl\n" if (ref($acl) ne "ARRAY");
		print "acl ",join(',', @$acl), "\n" if (ref($acl) eq "ARRAY");
		print "</PRE>";
	}

	my @grpList = ();

	if ((exists $m->session->{'logged_in'}) && (exists $m->session->{'my_groups'}) ) {

		# if ACL is an ARRAY, iterate foreach of its values.

		print "you are logged in..<BR>" if $D;

		if (ref($acl) eq "ARRAY") {
			print "you gave me an ARRAY of acls to search for..<BR>" if $D;
			foreach my $ac (@$acl) {
				print "i'm checking for $ac now..<BR>" if $D;
				# if group was defined, we know precisely where to look

				if (defined($group) && ($group ne "")) {
					print "you gave me a specific group ($group) to check..<BR>" if $D;
					if (exists $m->session->{'my_groups'}->{$group} &&
				     		grep /^$ac$/, @{$m->session->{'my_groups'}->{$group}}) {
							print "yes, you have $ac perms on $group<BR>" if $D;
							push @grpList, $group;
					}
				} 

				# otherwise, we need to find all groups that match the acl
				# so we can return them

				else {
					print "you didnt give me a specific group, so i have to check each one..<BR>" if $D;
					foreach my $grp (keys %{$m->session->{'my_groups'}}) {
						print "im checking $grp for $ac in: ", join(',', @{$m->session->{'my_groups'}->{$grp}}), "<BR>" if $D;

						if(grep /^$ac$/,  @{$m->session->{'my_groups'}->{$grp}}) {
							print "yes you have that<BR>" if $D;
							push @grpList, $grp;
						}
					}
				}
			}
		} 

		# otherwise, the ACL was pass in as a string (a single ACL) so 
		# check it directly. 

		else {
			print "you gave me a specific ACL (not a list of them)<BR>" if $D;

			# if $group was given, check it directly

			if (defined($group) && ($group ne "")) {
				print "and you gave me a specific group<BR>" if $D;
				if (exists $m->session->{'my_groups'}->{$group} &&
					grep /^$acl$/, @{$m->session->{'my_groups'}->{$group}}) {
						print "yes, you have $acl perms for $group<BR>" if $D;
						push @grpList, $group;
				}
			} 

			# else find all groups that match the acl so we can return them

			else {
				print "you didnt give me a specific group, ill check all of them <BR>" if $D;
				foreach my $grp (keys %{$m->session->{'my_groups'}}) {
					print "im checking $grp for $acl in: ". join(',',@{$m->session->{'my_groups'}->{$grp}})."<BR>" if $D;
					if(grep /^$acl$/, @{$m->session->{'my_groups'}->{$grp}}) {
						print "yes you have that<BR>" if $D;
						push @grpList, $grp 
					}
				}
			}
		}
	}

	print "<PRE>grpList: ", join(',', @grpList), "</PRE>" if $D;

	return (1, \@grpList) if ($#grpList > -1);
	return (0, []);
</%perl>
