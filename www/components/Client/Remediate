<%doc>
# $Header: /tmp/netpass/NetPass/www/components/Client/Remediate,v 1.9 2005/04/27 03:54:07 jeffmurphy Exp $

#   (c) 2004 University at Buffalo.
#   Available under the "Artistic License"
#   http://www.gnu.org/licenses/license-list.html#ArtisticLicense
</%doc>

<%args>
 $submit => ''
</%args>

<%perl>

my $ip    = $m->session->{'remote_addr'};
my $mac   = $m->session->{'remote_mac'};

# if they have a message waiting, it's due to a manual quarantine.

# if the client is PQUAR, then we suppress the message telling them how to remediate
# and ONLY show them the results (with no "fix" buttons and no "re-scan" option).
# they can read all of the pending message, but can't do anything else.


if ($m->session->{'regStatus'} eq "PQUAR") {
	_log("DEBUG", "$mac $ip this client is PQUAR. we'll display pending results and return. there is no way for this client to get out of the quarantine.\n");
	$m->comp('/Client/ShowResults', 'mac' => $mac, 'ip' => $ip, 'pquar' => 1);
	return;
}

# otherwise we give them a header which explains the remediation process, followed
# by the results.

my $msg = $np->db->getPage(-name => 'msg:remediate_directions', -nohtml => 1,
				-npcfg => $np->cfg, -ip => $ip);

if($msg) {
	print $msg;
} else {
	print $q->p("<h3>Remediate Your Machine</h3><p>Check off each item below as you fix it.</p>");
}

print $q->br;

$m->session->{'nessus'}          = [] if(!$m->session->{'nessus'});
$m->session->{'nessus_defaults'} = {} if(!$m->session->{'nessus_defaults'});

foreach my $sid (keys %ARGS) {
	if($ARGS{$sid} eq 'Fixed') {
		my ($type, $id) = (split(':', $sid))[1,2];
		_log ("INFO", "$mac $ip user claims $type:$id is fixed.\n");
		my @foo = grep(!/^$sid/, @{$m->session->{'nessus'}});
		$m->session->{'nessus'} = \@foo;
		my $rv = $np->db->updateResult(-mac => $mac, -type => $type, -id => $id, 
					-status => 'user-fixed');
		if ($rv) {
			_log ("ERROR", "$mac $ip failed to updateResult($type:$id): $rv\n");
		}
	}
}

my $results = $np->db->getResults(-mac => $mac);
if (ref($results) ne "HASH") {
	_log ("ERROR", "$mac $ip db failure: $results");
	print "A database failure has occurred. An administrator will have to examine the logs to determine precisely what failed.<P>";
	return;
}
my $nres    = $#{$results->{'type'}};

print $q->start_form();

if($nres > -1) {
	$m->comp('/Client/ShowResults', 'mac' => $mac, 'ip' => $ip, 'pquar' => 0);
} else {

	my $scanEnabled = $np->cfg->policy(-key => 'nessus', -network => $ip);
	_log("INFO", "$mac $ip scanEnabled=$scanEnabled\n");

	if (defined($scanEnabled) && $scanEnabled) {
		$m->session->{'phase'} = 'SCAN';
		my $msg = $np->db->getPage(-name => 'msg:remediate_completed', -nohtml => 1,
						-npcfg => $np->cfg, -ip => $ip);

		if($msg) {
			print $msg;
		} else {
			print $q->p("You have completed all the steps required for remediation. We must now scan your machine once again to confirm that all vulnerabilites have been fixed.");
		}
		print $q->submit(-name=>'submit', -value=>'Re-Scan') . $q->br;
	} else {
		$m->session->{'phase'} = 'COMPLETE';
		my $msg = $np->db->getPage(-name => 'msg:remediate_completed_no_rescan', 
						-nohtml => 1, -npcfg => $np->cfg, -ip => $ip);

		if($msg) {
			print $msg;
		} else {
			print $q->p("You have completed all the steps required for remediation. ");
		}
		print $q->submit(-name=>'submit', -value=>'Continue>>') . $q->br;

	}
}
	
print $q->end_form();


</%perl>

