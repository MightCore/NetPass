<%doc>
MODULE
	ShowResults (Mason)

DESCRIPTION
	This module fetches the results from the database for
	the client specified in the session (mac address) and
	displays those results. 

	If there is only one result, the javascript expand/collapse
	thing is suppressed. If there is more than one result, 
	the JS E/C thing is used if JS is available. 

	RESULTS_EXPAND determines the threshold at which point results
	are shown collapsed by default.

	We also examine each result. If the user has previous results
	that match in all respects and whose status is "user-fixed" then
	we apply the 'strike' system. This means that if the sum
	of previous 'user-fixed' results and the current result is 
	greater than the strikes setting, the user can no longer 
	simply click 'Fixed'. They must contact an Admin to have their
	previous results changed to a status of "fixed". 
</%doc>
<%args>
	$mac   => '';
	$ip    => '';
	$pquar => 0;
</%args>

<table border=0 cellpadding="0" cellspacing="0" style="border-collapse: collapse" width="100%">
<tr><th colspan=3>Detected Security Issues</th></tr>

<%perl>
my $results = $np->db->getResults(-mac => $mac);
my $nres    = -1; 
if (ref($results) eq "HASH") {
	$nres = $#{$results->{'type'}};
} else {
	_log("ERROR", "$mac $ip getResults failed: $results\n");
}

# determine which results are no longer fixable because the user
# has exhausted their strikes. if strikes is zero, then strike system
# is disabled for this IP. if the MAC is not yet registered, then
# the strike system is also disabled. Once they register, all 'user-fixed'
# results are converted to 'fixed' (netpass.mhtml)

my $struckOut = {};
my $maxStrikes = $np->cfg->policy(-key => 'STRIKES', -network => $ip);

if ($np->db->macIsRegistered($mac) && $maxStrikes) {
	my $noStrikesForSnort  = $np->cfg->policy(-key => 'NO_STRIKES_FOR_SNORT',  -network => $ip);
	my $noStrikesForNessus = $np->cfg->policy(-key => 'NO_STRIKES_FOR_NESSUS', -network => $ip);
	my $noStrikesForManual = $np->cfg->policy(-key => 'NO_STRIKES_FOR_MANUAL', -network => $ip);

	for(my $rn = 0 ; $rn <= $nres ; $rn++) {
		my $uf = $np->db->getResults(-mac    => $mac,
					     -status => 'user-fixed',
					     -type   => $results->{'type'}->[$rn],
					     -id     => $results->{'id'}->[$rn]);
		_log("DEBUG", "$mac $ip history on ".$results->{'type'}->[$rn].":".
			$results->{'id'}->[$rn]. " is ". $#{$uf->{'type'}}. "\n");
		# +1 bc $# is zero relative, +1 again because it's prev result + cur result
		if ( (ref($uf) eq "HASH") && ($#{$uf->{'type'}}+2 > $maxStrikes) ) {
			next if ( ($uf->{'type'}->[0] =~ /^snort$/i) && $noStrikesForSnort );
			next if ( ($uf->{'type'}->[0] =~ /^nessus/i) && $noStrikesForNessus );
			next if ( ($uf->{'type'}->[0] =~ /^manual$/i) && $noStrikesForManual );
			$struckOut->{$uf->{'type'}->[0]} -> {$uf->{'id'}->[0]} = 1;
		}
	}
} 

if ($nres > -1) {
	# if there's only one result pending, we forgo the javascript -/+ thing and suppress
	# the title. if they are pquar, we also suppress the 'fixed' button.

	if ($nres == 0) {
		my $sid = $results->{'id'}->[0];
		my $rid = $results->{'rowid'}->[0];
		my ($shortName, $info, $description, $type);
		$type = $results->{'type'}->[0];

		if ($type eq "nessus") {
			($shortName, $info, $description) = $np->db->getNessusInfo($sid);
		}
		elsif ($type eq "snort") {
			($shortName, $info, $description) = $np->db->getSnortInfo($sid);
		}
		else {
			($shortName, $info) = ("A message for you:", $sid);
		}

		if (!defined($shortName)) {
			$type        = "manual";
			$shortName   = "Database failure.";
			$info        = "msg:dbfailure";
			$description = "Sorry, something didn't work out quite right while I was looking at my database.";
		}

		print qq{<tr><td colspan=3 align="right"> };
		print $q->submit(-name=>"fixed;$type;$sid;$rid", -value=>'Fixed') 
			unless ($pquar || ($struckOut->{$type}->{$sid} == 1));
		print qq{</td>};
		print qq{</tr><tr><td colspan=3>};

		print "<ul>";

		_log("DEBUG", "$mac $ip found results ID=$sid type=$type info=$info\n");

		# if no custom message is configured, we'll print the default that 
		# is supplied by nessus or snort. 

		if($info =~ /^(nessus:|snort:)$/) {
			$description =~ s/\\n/\n/g;
			print $q->pre($description);
		} 
		elsif($info =~ /^msg:/) {
			print $np->db->getPage(-name => $info, -nohtml => 1, -npcfg => $np->cfg,
						-ip => $ip);
		}
		print qq{</td></tr>};
	}
	else {
		my $autoexpand = ($nres <= ($np->cfg->policy(-key => 'RESULTS_EXPAND', -network =>$ip)-1));
		for(my $resultNum = 0 ; $resultNum <= $nres ; $resultNum++) {
			my $sid = $results->{'id'}->[$resultNum];
			my $rid = $results->{'rowid'}->[$resultNum];
			my ($shortName, $info, $description, $type);
			$type = $results->{'type'}->[$resultNum];

			if ($type eq "nessus") {
				($shortName, $info, $description) = $np->db->getNessusInfo($sid);
			}
			elsif ($type eq "snort") {
				($shortName, $info, $description) = $np->db->getSnortInfo($sid);
			}
			else {
				($shortName, $info) = ("A message for you:", $sid);
			}

			if (!defined($shortName)) {
				$type        = "manual";
				$shortName   = "Database failure.";
				$info        = "msg:dbfailure";
				$description = "Sorry, something didn't work out quite right while I was looking at my database.";
			}
			
			print qq{<tr><td width="3%" align=center>};

			if ($m->session->{'js_enabled'} eq "enabled" && !$autoexpand) {
			    print qq{<a href="#" onclick="showHideObj('nessus-$sid', this); return false;">[+]</a>};
			} else {
			    print qq{[-]};
			}
			print qq{</td><td>$shortName</td>};
			print qq{<td width="1%" align="right"> };
			print $q->submit(-name=>"fixed;$type;$sid;$rid", -value=>'Fixed') 
				unless ($pquar || ($struckOut->{$type}->{$sid} == 1));
			print qq{</td>};
			print qq{</tr><tr><td colspan=3 class="gray">};

			if ($m->session->{'js_enabled'} eq "enabled" && !$autoexpand) {
			    print qq{<ul id='nessus-$sid' style='DISPLAY:None;'>};
			} else {
			    print "<ul>";
			}

			_log("DEBUG", "$mac $ip found results ID=$sid type=$type info=$info\n");

			# if no custom message is configured, we'll print the default that 
			# is supplied by nessus or snort. 

			if($info =~ /^(nessus:|snort:)$/) {
				$description =~ s/\\n/\n/g;
				print $q->pre($description);
			} 
			elsif($info =~ /^msg:/) {
				print $np->db->getPage(-name => $info, -nohtml => 1,
							-npcfg => $np->cfg, -ip => $ip);
			}
			print qq{</td></tr>};
		}
	}
} else {
</%perl>
<tr><td>You've been quarantined, but there are no results (reasons) to show you.
This shouldn't have happened.</td></tr>
%}
</table>

