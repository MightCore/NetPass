
<%doc>
# $Header: /tmp/netpass/NetPass/www/htdocs/Admin/Editor/index.mhtml,v 1.6 2005/06/08 16:35:42 jeffmurphy Exp $

#   (c) 2004 University at Buffalo.
#   Available under the "Artistic License"
#   http://www.gnu.org/licenses/license-list.html#ArtisticLicense
</%doc>

<%args>
$name    => '';
$ta      => '';
$search  => '';
$group   => '';
$submit  => '';
$del     => '';
</%args>


<script><!--
setWhereAmI('Message Editor');
--></script>

<%perl>
use Data::Dumper; 

$name = pop @$name if (ref($name) eq "ARRAY");
$group = pop @$group if (ref($group) eq "ARRAY");

print $q->h2("Message Editor");

my @rwGroups = ('Admin', 'Editor');
my @roGroups = ('Reports');
my $readOnly = "disabled";

my ($isRO, $roGroups) = $m->comp('/Admin/MemberOf', 'acl' => [ @roGroups ]);
my ($isRW, $rwGroups) = $m->comp('/Admin/MemberOf', 'acl' => [ @rwGroups ]);
my ($isRoot, $junk)   = $m->comp('/Admin/MemberOf', 'acl' => [ 'Admin' ], 'group' => 'default');
my ($allMyRO, $allMyRW);
($junk, $allMyRO) = $m->comp('/Admin/MemberOf', 'acl' => [ @roGroups ]);
($junk, $allMyRW) = $m->comp('/Admin/MemberOf', 'acl' => [ @rwGroups ]);

if ($isRW) {
        $readOnly = "";
} elsif ($isRO) {
        $readOnly = "disabled";
} else {
        print $q->p({-class=>'error'},
                "Sorry, you don't have access to this form.<P>");
        return;
}

print $q->start_form();

my $pageList = $np->db->getPageList();

my %allGroups = map { $_ => $_ } 'default', @{$pageList->{'group'}}, @{$np->cfg->getNetgroups()};

print "You have permission to <B>edit</B> the messages in the following groups: ", join(', ', @$allMyRW), "<BR>"
	if ($#{$allMyRW} > -1);

print qq{<P>
"Default" means "all groups". Note that even though all groups appear in the dropdown menu,
you will only be allowed to save changes to edit pages in the groups you have
permissions for. If you want to use one of the 'default' pages as a starting point, 
'edit' it and then change the group that it is in and click 'Save Copy'.<P>};


print $q->table({-border=>0, -width=>600},
		$q->TR($q->td({-colspan=>2, -align=>"right"}, 

                ($readOnly eq "")?$q->a({-href=>"edit.mhtml"}, "[ Add New Message ]"):""
		)).

		$q->TR(
			$q->th({-colspan=>2}, "Search for messages:")
		).
		$q->TR(
			$q->td({-class=>"gray"}, "Name:") .
			$q->td({-class=>"gray"},
				$q->textfield(
						-name 	=> "name",
						-value 	=> $name
				)
			)
		).
		$q->TR(
			$q->td({-class=>"gray"}, 'Group:') .
			$q->td({-class=>"gray"},
				$q->popup_menu(
						-name 	=> "group",
						-default => $group,
						-values => [ sort keys %allGroups ]
				)
			)
		).
		$q->TR(
			$q->td({-class=>"gray"}, '&nbsp;') .
			$q->td({-class=>"gray"},
				$q->submit(
						-name 	=> "search",
						-value 	=> "Search"
				)
			)
		)

	);

return if(!$submit && !$search && !$del);

if ($submit) {
	if ( ($name =~ /;/) || ($group =~ /;/) ) {
		print $q->p({-class => 'error'}, "Name and/or group can not contain semi-colons.");
	} else {
		my $rv = savePage($allMyRW, $name, $group, $ta, ($submit eq " Save Copy "), $isRoot);
		print $q->p({-class=>'error'}, $rv);
	}
}


if ($del ne '') {
	if ($del !~ /;/) {
		print "<P class='error'>Delete parse error.</P>";
	} else {
		my ($dN, $dG) = split(/;/, $del);
		if ($isRoot || grep /^$dG$/, @$rwGroups)  {
			my $rv = $np->db->delPage(-name => $dN, -group => $dG);
			if ($rv) {
				print "<P class='error'>Couldn't delete page $dN from $dG - $rv</P>";
			} else {
				$np->db->audit( -user => $m->session->{'username'},
						-severity => "ALERT", -ip => $ENV{'REMOTE_ADDR'},
						-msg => [ "MessageEdit: deleted page $dN from $dG" ]);
			}
		}
	}
}

my $pl = $np->db->getPageList(-name => $name, -group => $group);
if (ref($pl) ne "HASH") {
	print ("<P class='error'>Sorry, there was an error while processing your request ($pl).</P>");
} else {
	my $count = $#{$pl->{'name'}} + 1;
	my $class = "";

</%perl>
	<h4>Your search returned <%$count%> result(s)</h4>
%	if ($count) {
		<table>
		<tr><th>Name</th><th>Group</th><th colspan=3>Operation</th></tr>

%		for(my $row = 0 ; $row <= $#{$pl->{'name'}} ; $row++) {
%			$class = ($class eq "")?"gray":"";
%			my $rwHref  = "edit.mhtml?name=" . $pl->{'name'}->[$row]."&group=".$pl->{'group'}->[$row];
%			my $delHref = "index.mhtml?del=1&name="  . $pl->{'name'}->[$row]."&group=".$pl->{'group'}->[$row];
%			my $roHref  = "view.mhtml?name=" . $pl->{'name'}->[$row]."&group=".$pl->{'group'}->[$row];
%			my $delLink = "";

			<tr class="<%$class%>">
			<td width='50%'><%$pl->{'name'}->[$row]%></td>
			<td width='25%'><%$pl->{'group'}->[$row]%></td>
			<td width='8%'><a href="<%$rwHref%>">[ edit ]</a></td>
%			if ($isRoot || grep /^$pl->{'group'}->[$row]$/, @$rwGroups) {
				<td width='8%'>
<button class='href' name='del' value='<%$pl->{'name'}->[$row]%>;<%$pl->{'group'}->[$row]%>'>[ del ]</button>
</td>
%			} else {
				<td width='8%'> </td>
%			}
			<td width='8%'><a href="<%$roHref%>">[ view ]</a></td>
			</tr>
%		}
		</table>
%	}
%}

</form>
<P>

<%perl>
return;

sub savePage {
	my $rw      = shift;
	my $name    = shift;
	my $group   = shift;
	my $content = shift;
	my $noupdate = shift;
	my $isRoot  = shift;

	# enforce permissions

	if ($isRoot || grep /^$group$/, @$rw) {

		$np->db->audit(
			-user => $m->session->{'username'}, -ip => $ENV{'REMOTE_ADDR'},
	      		-msg => [ "MessageEdit: $name ($group) edited" ]);

		my $rv = $np->db->setPage(-name => $name, -group => $group,
					  -content => $content, -noupdate => $noupdate);

		if ($rv =~ /duplicate/i) {
			return "Save failed. Duplicate entry. Did you use 'Save Copy' but forget to change the name?";
		}
		return $rv if ($rv); # error
		return "Page saved.";
	}

	# else you dont have permission

	$np->db->audit( -user => $m->session->{'username'}, -severity => "ALERT",
			-msg => [ "MessageEdit: tried to edit $name ($group) but doesnt have permission to do so" ]);

	return "You dont have the appropriate permissions to edit this message.";
}



</%perl>


