<%doc>
DESCRIPTION

This form allows you to:

 - add/remove netgroups
 - configure per-netgroup policy
	- any of the policy settings

PERMISSIONS

	RW	default/Admin
	RO	none
</%doc>
<%args>
	$submitButton => '';
	$netgroups    => '';
	$networks     => '';
</%args>
<%perl>
return unless $m->comp('/Admin/Login', %ARGS);

my ($isRoot, $junk) = $m->comp('/Admin/MemberOf', 'acl' => [ 'Admin' ], 'group' => 'default');
if (!$isRoot) {
	print qq{<p class='error'>Sorry, you don't have access to this form.};
	return;
}

# these group names can not be used as 'netgroups'

my $reservedGroups = { 'default' => 1, 'clientAccess' => 1 };

# fetch all known networks and netgroups

my $allNetworks = $np->cfg->getNetworks();
my $allNetgroups = ();
foreach my $nw (@$allNetworks) {
        my $ng = $np->cfg->getNetgroup($nw);
        push @$allNetgroups, $ng if ($ng ne "") && (!grep(/^$ng$/, @$allNetgroups));
}
</%perl>

<h2> Network Configuration </h2>

<%perl>
$m->comp('/Admin/LockConfig', 'enableWhenLocked' => [ 'addNetgroup', 'submitButton' ]);
my $WH = "-" x 20;

my $restartnetpass = 0;
my $restartnessus  = 0;
my $restarthttpd   = 0;

if ($submitButton eq 'Commit Changes') {
	foreach my $ak ( keys %ARGS ) {
		if ($ak =~ /^(\S+):(\S+)$/) {
			my $section = $1;
			my $var     = $2;

			if ($section eq "policy") {
				if ($ARGS{"usedefault:$var"}) {
					$np->cfg->removePolicy(-key => $var, 
								-location => 'group',
								-network => $netgroups);
				} else {
					$np->cfg->policy(-key => $var, -network => $netgroups,
							 -val => $ARGS{$ak});
				}
			}
		}
	}

	my $rv = $np->cfg->save(-user => $m->session->{'username'});
	if ($rv) {
		print "<P class='error'>Failed to save configuration: $rv</P>";
	} else {
		print "<P class='error'>Netgroup Configuration Saved.</P>";
	}
}
</%perl>

<form method="post">
<table border=0>
<tr>
    <th>Netgroups</th>
    <th>Networks</th>
</tr>
<tr>
    <td style='text-align:center; vertical-align: top;'>
	<%$q->scrolling_list(-name => 'netgroups', -values => [ $WH, sort @$allNetgroups ], 
		-default => $netgroups, -id => 'netgroups',
		-attributes => { $WH => { 'disabled' => 1 } },
		-onchange => 'netgroup_onchange_netgroups();',
		-size => 15, -multiple => 'false')%><P>
	<input id='addNetgroup' name='addNetgroup' size=20 value='Add Netgroup...' disabled>
    </td>
    <td style='text-align:center; vertical-align: top;'>
       <%$q->scrolling_list(-name => 'networks', -id => 'networks',  -values => [ $WH, sort @$allNetworks ], 
				-attributes => { $WH => { 'disabled' => 1 } },
				-default => $networks, -size => 15, -multiple => 'false')%><P>
	<input type='submit' name='submitButton' id='submitButton' value='Commit Changes' disabled>
    </td>
</tr>
</table>
<P>
% if ($netgroups) {
% 	$m->comp('/Admin/TableEditPolicy', %ARGS, 'tableName' => 'Netgroup General Settings for '.$netgroups, 'network' => $netgroups, 'suppressKeys' => { 'PID_DIR' => 1, 'BASE_DIR' => 1 } );
% }
</form>

<script language='JavaScript'>
var pageDirty = false;
setWhereAmI('Configuration &gt; Netgroups');
var reservedGroups = new Array;
<%perl>
foreach my $rg ($WH, keys %$reservedGroups) {
	print qq{reservedGroups.push('$rg');\n};
}
</%perl>
</script>
<script src="/resources/js/common.js" type="text/javascript"></script>
<script src="/resources/js/netgroups.js" type="text/javascript"></script>


<%perl>
my $lstat = $np->db->isConfigLocked();

if (ref($lstat) eq "HASH") { 
	# the config is locked
	if ($lstat->{'user'} eq $m->session->{'username'}) {
		# by us, so show the unlock button
		print qq{<script>lockConfig_results("OK lock");lockConfig_enableElements();</script>};
	} else {
		# but not by us, show the force unlock button
		print qq{<script>lockConfig_results("NOK lock $lstat->{'user'}");lockConfig_disableElements();</script>};
	}
} 
elsif ($lstat) {
	# there was a problem
} 
else {
	# the config is not locked, show the lock button
	print qq{<script>lockConfig_results("OK unlock");lockConfig_disableElements();</script>};
}

</%perl>
