<%doc>
DESCRIPTION

This form allows you to:

 - add/remove networks
 - configure per-network settings
	- comment
	- ha enabled/disabled + settings
	- garp enabled/disabled + settings
	- netgroup membership
	- interface
	- nonquar/quar vlan id
	- switches
 - configure perl-network policy
	- any of the policy settings

PERMISSIONS

	RW	default/Admin
	RO	none
</%doc>
<%args>
	$submitButton        => '';
	$network             => '';
	$comment             => '';
	$interface           => '';
	$qvid                => '';
	$uqvid               => '';
        $haToggle            => '';
	$primaryRedirector   => '';
	$secondaryRedirector => '';
	$haNPServers         => [];
	$virtualIP           => '';
	$garpToggle          => '';
	$garpDelay           => 5;
	$garpNumber          => 3;
	$switches            => [];
	$BSW                 => '';
</%args>
<%perl>
use Data::Dumper;

#print "<PRE>",  Dumper(\%ARGS), "</PRE>";
my ($isRoot, $junk) = $m->comp('/Admin/MemberOf', 'acl' => [ 'Admin' ], 'group' => 'default');
if (!$isRoot) {
	print qq{<p class='error'>Sorry, you don't have access to this form.</P>};
	return;
}

my $ip = $ENV{'REMOTE_ADDR'};
my $whoami = $m->session->{'username'};

use Sys::Hostname;

my $ng;



my @setResults = ();

if ( ($submitButton eq "Commit Changes") && $network ) {
	_log("DEBUG", $m->session->{'username'}. " is updating $network $secondaryRedirector\n");

	my $rv;
	$rv = $np->cfg->setNetwork(-network => $network,
					-comment => $comment,
					-interface => $interface,
					-qvid => $qvid,
					-uqvid => $uqvid);
	push @setResults, "Failed to set 'network' fields: $rv" if $rv;

	$rv = $np->cfg->setHA(  -network   => $network, 
				-enabled   => $haToggle eq "Enabled" ? 1 : 0, 
				-primary   => $primaryRedirector,
				-secondary => $secondaryRedirector,
				-virtualip => $virtualIP,
				-servers   => $haNPServers
		);
	push @setResults, "Failed to set HA fields: $rv" if $rv;

	$rv = $np->cfg->setGarp(-network => $network, 
				-enabled => $garpToggle eq "Enabled" ? 1 : 0,
				-delay   => $garpDelay,
				-number  => $garpNumber
			);
	push @setResults, "Failed to set 'garp' fields: $rv" if $rv;

	$np->cfg->setSwitches(	-network  => $network, 
				-switches => $switches,
				-bsw      => $BSW);
	push @setResults, "Failed to set 'switches': $rv" if $rv;

	$np->cfg->save(-user => $whoami) if ($#setResults == -1);
}

$garpDelay  ||= 5;
$garpNumber ||= 3;

if ($network && $np->cfg->garp($network)) {
	$garpDelay  = $np->cfg->garp($network, 'delay');
	$garpNumber = $np->cfg->garp($network, 'number');
}

if ($network) {
	$qvid       = $np->cfg->quarantineVlan($network);
	$uqvid      = $np->cfg->nonquarantineVlan($network);
	$interface  = $np->cfg->getInterface($network);
	$comment    = $np->cfg->getNetComment($network);
	$ng         = $np->cfg->getNetgroup(-network => $network);
	$ng       ||= '';
	$switches   = $np->cfg->getSwitches($network);
	$BSW        = $np->cfg->getBSW($network);
}
if ($network && $np->cfg->ha($network)) {
	$primaryRedirector   = $np->cfg->primary_redirector($network);
	$secondaryRedirector = $np->cfg->secondary_redirector($network);
	$haNPServers         = $np->cfg->ha_servers($network);
	if (!defined($haNPServers)) {
		$haNPServers = [ hostname ];
	}
	$virtualIP = $np->cfg->virtualIP($network);
}



# fetch all known networks and netgroups

my $allNetworks = $np->cfg->getNetworks();
my $allNetgroups = ();
foreach my $nw (@$allNetworks) {
        my $_ng = $np->cfg->getNetgroup(-network => $nw);
        push @$allNetgroups, $_ng if ($_ng ne "") && (!grep(/^$_ng$/, @$allNetgroups));
}
$m->comp('/Admin/LockConfig', 'enableWhenLocked' => [ 'addNetwork', 'submitButton' ], 'init' => 0);
my $WH = "--Select a Network--";
my $WH2 = "----------------------";

</%perl>

<h2> Network Configuration </h2>

% print $q->p({-class => 'error'}, join('<BR>', @setResults)) if ($#setResults > -1);

Notes:
<ul>
<li>Networks are in CIDR notation (A.B.C.D/M)
<li>To add a new network:
<ol>
  <li> Click inside the "Add Network.." box. 
  <li> Type in a network name (CIDR notation only)
  <li> Click 'Commit Changes'
</ol>
<LI>To edit a network (once it's been added):
<ol>
  <li>Select the network from the drop-down menu.
  <LI>Edit it's parameters.
  <li>Click 'Commit Changes'
</ol>
</ul>

<script language='JavaScript'><!--
setWhereAmI('Configuration &gt; Network');
DBG_init();
--></script>


<form method="post">
<table border=0 width=1000 id='networkConfig'>
<tr class='selector'>
    <td class='selector'>
       <%$q->popup_menu(-id => 'network', -name => 'network',  -values => [ $WH, sort @$allNetworks ], 
		-default => $network, -onchange => 'network_onchange_network();')%>
    </td>
    <td class='selector'>
	<input id='addNetwork' name='addNetwork' size=20 value='Add Network...' disabled
	onblur='network_onblur_addNetwork(this);' onfocus='network_onfocus_addNetwork(this);'>
    </td>
    <td class='selector'>
	<input type='submit' onclick='network_onclick_submitButton();' 
		name='submitButton' id='submitButton' value='Commit Changes' disabled>
    </td>
</tr>
% if ($network) {
<tr><td class='left'>Comment:</td><td colspan=2><input size=32 maxlength=80 name='comment' value="<%$comment%>"></td></tr>
<tr><td class='left'>Interface:</td><td colspan=2><input size=8 maxlength=16 name='interface' value="<%$interface%>"> (sans "/dev/")</td></tr>
<tr><td class='left'>Quarantine VLANID:</td><td colspan=2><input size=6 maxlength=6 name='qvid' value="<%$qvid%>"></td></tr>
<tr><td class='left'>Unquarantine VLANID:</td><td colspan=2><input size=6 maxlength=6 name='uqvid' value="<%$uqvid%>"></td></tr>
<tr><td class='left'>Netgroup:</td><td colspan=2><a href="netgroups.mhtml?netgroups=<%$ng%>"><%$ng%></a></td></tr>


<tr><td class='left'>HA:</td><td colspan=2> <%$q->popup_menu(-id => 'haToggle', -name => 'haToggle', -values => [ 'Disabled', 'Enabled' ], 
	-onchange => 'network_onchange_haToggle(this);', -default => $np->cfg->ha($network) ? "Enabled" : "Disabled")%></td></tr>
<tr class='haOptions' id='haOptions1'><td class='left'>Primary Redirector:</td>
	<td colspan=2><input size=32 maxlength=255 name='primaryRedirector' value="<%$primaryRedirector%>"></td></tr>
<tr class='haOptions' id='haOptions2'><td class='left'>Secondary Redirector:</td>
	<td colspan=2><input size=32 maxlength=255 name='secondaryRedirector' value="<%$secondaryRedirector%>"></td></tr>
<tr class='haOptions' id='haOptions3'><td class='left'>Servers:<BR>
<button id='delHaNPServer' onclick='network_onclick_delHaNPServer(); return false;' type='button'>Delete</button><BR>
<input  id='addHaNPServer' onfocus='network_onfocus_addHaNPServer(this);' onblur='return network_onblur_addHaNPServer(this);' value="Add Server..."
        size=12 maxlength=255></td>
<td colspan=2><%$q->scrolling_list(-id => 'haNPServers', -name => 'haNPServers', -size => 4, -values => [$WH2, @$haNPServers] , -multiple => 'true')%></td></tr>
<tr class='haOptions' id='haOptions4'><td class='left'>Virtual IP:</td><td colspan=2><input  id='virtualIP' name='virtualIP' size=16 maxlength=32
	value="<%$virtualIP%>"></td></tr>

<tr><td class='left'>GARP:</td><td colspan=2> <%$q->popup_menu(-id => 'garpToggle', -name => 'garpToggle', -values => [ 'Disabled', 'Enabled' ], 
	-onchange => 'network_onchange_garpToggle(this);', -default => $np->cfg->garp($network) ? "Enabled" : "Disabled")%></td></tr>
<tr class='garpOptions' id='garpOptions1'><td class='left'>Delay:</td><td colspan=2><input size=4 maxlength=8 name='garpDelay' value="<%$garpDelay%>"> seconds </td></tr>
<tr class='garpOptions' id='garpOptions2'><td class='left'>Number:</td><td colspan=2><input size=4 maxlength=8 name='garpNumber' value="<%$garpNumber%>"></td></tr>

<tr><td class='left'>Switches:<BR>
<button id='delSwitch' onclick='network_onclick_delSwitch(); return false;' 
	type='button'>Delete</button><BR>
<button id='cfgSwitch' onclick='network_onclick_cfgSwitch(); return false;' 
	type='button'>Configure</button><BR>
<input  id='addSwitch' onfocus='network_onfocus_addSwitch(this);' 
	onblur='return network_onblur_addSwitch(this);' value="Add Switch..."
        size=12 maxlength=255>
</td>
<td colspan=2>
BSW: <input name='BSW' id='BSW' value='<%$BSW%>' size=16 maxlength=80><BR>
<%$q->scrolling_list(-id => 'switches', -name => 'switches', -size => 4, 
	-values => [ $WH2, @$switches ] , -multiple => 'true')%></td></tr>
</td>
</tr>
<tr><td colspan=3>
<PRE><B>TODO:
        - when click netgroup .. highlight networks list</B>
</PRE>
</td></tr>
<tr><td colspan=3>
%       my $ngtxt = $ng ? qq{<BR>(Part of the "<a href='netgroups.mhtml?netgroups=$ng'>$ng</a>" netgroup)} : "";
% 	$m->comp('/Admin/TableEditPolicy', %ARGS, 'tableName' => 'Network General Settings for '.$network.$ngtxt, 
%		 'showDefault' => 1, 'formatFor' => 'network', 
%		 'network' => $network, 'suppressKeys' => { 'PID_DIR' => 1, 'BASE_DIR' => 1 } );
% }
</td></tr>
</table>
</form>



<script src="/resources/js/common.js" type="text/javascript"></script>
<script src="/resources/js/network.js" type="text/javascript"></script>
<script language="JavaScript">
var network_ourHostname = '<%hostname%>';
% if ($network && $np->cfg->ha($network)) {
	network_show_haOptions();
% } else {
	network_hide_haOptions();
% }
% if ($network && $np->cfg->garp($network)) {
	network_show_garpOptions();
% } else {
	network_hide_garpOptions();
% }
</script>

<%perl>

my $lstat = $np->db->isConfigLocked();

if (ref($lstat) eq "HASH") { 
	# the config is locked
	if ($lstat->{'user'} eq $m->session->{'username'}) {
		# by us, so show the unlock button
		print qq{<script>lockConfig_results("OK lock");lockConfig_enableElements();</script>};
	} else {
		# but not by us, show the force unlock button
		print qq{<script>lockConfig_results("NOK lock $lstat->{'user'}");lockConfig_disableElements();</script>};
	}
} 
elsif ($lstat) {
	# there was a problem
} 
else {
	# the config is not locked, show the lock button
	print qq{<script>lockConfig_results("OK unlock");lockConfig_disableElements();</script>};
}

</%perl>
