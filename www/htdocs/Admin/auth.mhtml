<%doc>
</%doc>
<%args>
	$auth_method              => '';
	$admin_auth_method        => '';
	$radiusServer             => '';
	$delRadiusServer          => '';

	$adminradiusServer       => '';
	$admindelRadiusServer    => '';

	$submitButton             => '';

	$ldapServer               => '';
	$delLdapServer            => '';
	$adminldapServer         => '';
	$admindelLdapServer      => '';

	$ldapBase                 => '';
	$adminldapBase           => '';

	$ldapFilter               => '';
	$adminldapFilter         => '';

	$ldapPasswordField        => '';
	$adminldapPasswordField  => '';
</%args>
<%perl>
my ($isRoot, $junk) = $m->comp('/Admin/MemberOf', 'acl' => [ 'Admin' ], 'group' => 'default');
if (!$isRoot) {
	print qq{<p class='error'>Sorry, you don't have access to this form.</P>};
	return;
}

my @err;
my $WH = "----------------------";
my $aa = $admin_auth_method || $np->cfg->policy(-key => 'ADMIN_AUTH_METHOD');
my $ca = $auth_method || $np->cfg->policy(-key => 'AUTH_METHOD');
my $rv;
my $whoami = $m->session->{'username'};

$m->comp('/Admin/LockConfig', 'enableWhenLocked' => [ 'submitButton' ], 'init' => 0);
my $lstat = $np->db->isConfigLocked();
</%perl>
Radius and LDAP servers are shared. If you select Radius for both Client and Admin
authentication, you will see two "Radius Server" configuration areas, but they
both refer to the same information. So if you add a Radius server to one, it will 
appear in both.<P>
<%perl>

if ($submitButton eq "Commit Changes") {
	_log("DEBUG", "$whoami is changing system auth settings\n");

	# set global policy AUTH_METHOD

	$np->cfg->policy(-key => 'AUTH_METHOD', -val => $auth_method);

	# set global policy ADMIN_AUTH_METHOD

	$np->cfg->policy(-key => 'ADMIN_AUTH_METHOD', -val => $admin_auth_method);

	# if radiusServer && delRadiusServer then remove $radiusServer

	if ( ($auth_method eq "NetPass::Auth::Radius") && ($radiusServer ne "") &&  
	     ($delRadiusServer eq "Delete Server") ) {
		$rv = $np->cfg->setRadius(-server => $radiusServer);
		push @err, $rv if ($rv);
	}

	if (  ($admin_auth_method eq "NetPass::Auth::Radius") && ($adminradiusServer ne "") &&  
	      ($admindelRadiusServer eq "Delete Server") ) {
		$rv = $np->cfg->setRadius(-server => $adminradiusServer);
		push @err, $rv if ($rv);
	}

	# if ldapServer && delLdapServer then del

	if ( ($auth_method eq "NetPass::Auth::LDAP") && ($ldapServer ne "") &&  
	     ($delLdapServer eq "Delete Server") ) {
		_log("DEBUG", "$whoami is deleting ldap server $ldapServer");
		$rv = $np->cfg->setLDAP(-server => $ldapServer);
		push @err, $rv if ($rv);
	}

	if (  ($admin_auth_method eq "NetPass::Auth::LDAP") && ($adminldapServer ne "") &&  
	      ($admindelLdapServer eq "Delete Server") ) {
		$rv = $np->cfg->setLDAP(-server => $adminldapServer);
		_log("DEBUG", "$whoami is deleting ldap server $adminldapServer");
		push @err, $rv if ($rv);
	}

	$np->cfg->save(-user => $whoami);
}
</%perl>

<script language='JavaScript'><!--
var pageDirty = false;
setWhereAmI('Authentication &gt; Methods');
DBG_init();
--></script>
<script src="/resources/js/common.js" type="text/javascript"></script>
<script src="/resources/js/radius.js" type="text/javascript"></script>
<script src="/resources/js/ldap.js" type="text/javascript"></script>

<form method="post">
<input type='submit' name='submitButton' id='submitButton' value='Commit Changes'><P>

<TABLE WIDTH=800 ID="authMethods" CELLSPACING=2 CELLPADDING=2>
<THEAD>
<TR><TH COLSPAN=2>Authentication Methods</TH></TR>
</THEAD>
<TBODY>
<TR>
<TD CLASS='left'>Client Auth Method</TD>
<TD CLASS='right'>
<%$q->popup_menu (
                        -name    => 'auth_method',
                        -default => $auth_method || $ca,
                        -values => [ 'NetPass::Auth::DB' , 'NetPass::Auth::Radius',
					'NetPass::Auth::LDAP', 'NetPass::Auth::Unix' ]
                    )%>
</TD></TR>
<TR><TD colspan=2 align='right'>
% if ($ca eq "NetPass::Auth::Radius") {
%	$m->comp('/Admin/FormAuthRadius', %ARGS);
% } elsif ($ca eq "NetPass::Auth::LDAP") {
%	$m->comp('/Admin/FormAuthLDAP', %ARGS);
% }
</tD></TR>
<TR>
<TD CLASS='left'>Admin Auth Method</TD>
<TD CLASS='right'>
<%$q->popup_menu (
			-name   => 'admin_auth_method',
                        -default => $admin_auth_method || $aa,
                        -values => [ 'NetPass::Auth::DB' , 'NetPass::Auth::Radius',
					'NetPass::Auth::LDAP', 'NetPass::Auth::Unix' ]
                    )%>
</TD></TR>
<TR><TD colspan=2 align='right'>
% if ($aa eq "NetPass::Auth::Radius") {
%	$m->comp('/Admin/FormAuthRadius', 'prefix' => 'admin_', %ARGS);
% } elsif ($aa eq "NetPass::Auth::LDAP") {
%	$m->comp('/Admin/FormAuthLDAP', 'prefix' => 'admin_', %ARGS);
% }
</tD></TR>
</table>
</form>

<%perl>


if (ref($lstat) eq "HASH") {
        # the config is locked
        if ($lstat->{'user'} eq $m->session->{'username'}) {
                # by us, so show the unlock button
                print qq{<script>lockConfig_results("OK lock");lockConfig_enableElements();</script>};
        } else {
                # but not by us, show the force unlock button
                print qq{<script>lockConfig_results("NOK lock $lstat->{'user'}");lockConfig_disableElements();</script>};
        }
}
elsif ($lstat) {
        # there was a problem
}
else {
        # the config is not locked, show the lock button
        print qq{<script>lockConfig_results("OK unlock");lockConfig_disableElements();</script>};
}

</%perl>

