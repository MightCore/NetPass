<%doc>
# $Header: /tmp/netpass/NetPass/www/htdocs/Admin/reports/bynet.mhtml,v 1.7 2005/09/06 20:29:18 jeffmurphy Exp $

#   (c) 2004 University at Buffalo.
#   Available under the "Artistic License"
#   http://www.gnu.org/licenses/license-list.html#ArtisticLicense
</%doc>

<%args>
</%args>

<script><!--
setWhereAmI('Reports');
--></script>

<%perl>

use Time::HiRes qw(gettimeofday tv_interval);
use NetPass::Network qw (cidr2int searchArpCache int2cidr ip2int int2ip allOnesBroadcast);
use Net::Ping::External qw(ping);


if ( $m->comp('/Admin/Login', %ARGS) ) {

	my $t0 = [gettimeofday];

	my $sql       = "select ipAddress from register";
	my $allRows   = $dbh->selectall_arrayref($sql);

	print "Be patient.. report will take some time to produce..<P>\n";

	print "<PRE>";

	#print "query finished in ", tv_interval($t0), "secs\n";

	printf("%20.20s %20.20s %10.10s %10.10s\n", "", "", "Registered", "Active");
	printf("%20.20s %20.20s %10.10s %10.10s\n", "Comment", "Network", "Clients", "In-Quar");

  	$m->flush_buffer();

	my $total = 0;

	my %netStats;
	my $totalClients = 0;

	# count up number of registered clients by-network

	$t0 = [gettimeofday];

	my %netInts;
	my %masks;

	foreach my $nw (@{$np->cfg->getNetworks()}) {
		my ($a1, $b1) = cidr2int($nw);
		$netInts{$a1} = 1;
		$masks{$b1}   = 1;
		$masks{$a1}   = $b1;
	}

	#print "net convert in ", tv_interval($t0), "secs\n";

	foreach my $row (@$allRows) {
		my $clientIP = $row->[0];
		foreach my $mask (sort { $b <=> $a } keys %masks) {
			my $clientNW = ip2int($clientIP) & $mask;
			if (exists $netInts{$clientNW}) {
				$netStats{$clientNW}++;
				$totalClients++;
				last;
			}
		}
	}

	#print "finding networks took ", tv_interval($t0), "secs\n";

	# count up number of live clients in quarantine based on
	# what networks we see in our local arp cache

	$t0 = [gettimeofday];

	my $totalInQuar   = 0;
	my $totalPingable = 0;

	foreach my $network (NetPass::Network::ipsort([keys %netStats])) {
		my $dottedNetwork = int2ip($network)."/".
			int2cidr($masks{$network});

# pinging the broadcast doesnt seem to populate the linux 
# arp table, so we wont bother.
#		ping(host => allOnesBroadcast($dottedNetwork),
#			timeout => 1, count => 2);

		my $minq = NetPass::Network::searchArpCache($dottedNetwork);

		if (ref ($minq) eq "HASH") {
			foreach my $_ip  (keys %$minq) {
				if ($minq->{$_ip} =~ "incomplete") {
					delete $minq->{$_ip};
				}
					
			}
		} else {
			$minq = "" if $minq =~ "incomplete";
		}

		my $allMacs = join(' ', (values %$minq));
		$allMacs =~ s/\://g;
		$allMacs =~ tr [A-Z] [a-z];
		$allMacs =~ s/\ /%20/g;
		my $byClient = "byclient.mhtml?macs=$allMacs";
                         

		my $aq = 0;  my $aq2 = 0;
		if (ref($minq) eq "HASH") {
			$aq2 = keys %$minq;
			$aq  = checkAlive([ keys %$minq ]);
		} else {
			if (defined($minq) && ($minq ne "")) {
				$aq2 = 1;
				$aq = checkAlive([ $dottedNetwork ]);
			}
		}

		my $cmt = $np->cfg->getNetComment($dottedNetwork);

		$totalInQuar   += $aq2;
		$totalPingable += $aq;

		my $byClientsHREF = "$aq/$aq2";
		$byClientsHREF = qq{<a href="$byClient">$aq/$aq2</a>} if ($allMacs ne "");

		printf("%20.20s %20.20s %10.10s     %s\n", $cmt, 
			$dottedNetwork, 
			$netStats{$network}, 
			$byClientsHREF
		);
	  	$m->flush_buffer();
	}

	printf("\n\ntotal registered  = $totalClients\n");
	printf("total act in quar = $totalInQuar  (%2.2f%%)\n", 
		100*($totalInQuar/$totalClients));

	#print "printing took ", tv_interval($t0), "secs\n";

</%perl>
</PRE>
"Active in Quarantine" isn't necessarily true. We calculate this column based
on the population of the ARP cache on the NetPass server. A client may have
already left the quarantine, but will live on for a while longer in the ARP
cache, leading to potentially more quarantine occupants than there really are.<P>

The first component of "Active in Quarantine" is the number of hosts that actually
replied to a "ping". This number might be a little low if hosts are running firewalls
that block ICMP. The second component is the number of hosts in the ARP cache. This
number might be a little high if a host has been unquarantined, but has not yet
aged out of the ARP cache. The actual number of hosts in quarantine is somewhere
between those two numbers.
<%perl>

}

sub checkAlive {
	my $ipList = shift;
	my $count  = 0;

	#print "ipList ", $#{$ipList}, "\n";
	foreach my $ip (@$ipList) {
		#print "alive? $ip<P>\n";
		if (ping(host => $ip, timeout => 1, count => 1)) {
			$count++;
			#print " yes $count\n";
		} else {
			#print " no\n";
		}
	}

	#print "ret $count\n";
	return $count;
}

</%perl>


