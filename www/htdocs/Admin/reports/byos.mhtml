<%doc>
#   (c) 2004 University at Buffalo.
#   Available under the "Artistic License"
#   http://www.gnu.org/licenses/license-list.html#ArtisticLicense
</%doc>

<%args>
</%args>

<%perl>

use GD;
use GD::Graph;
use GD::Graph::pie;
use FileHandle;
use File::stat;

my $REPORTSDIR = "/opt/netpass/www/htdocs/Admin/reports";
my $GRAPHIMG   = "byospiechart.png";

my @cols;
my @vals;

if ( $m->comp('/Admin/Login', %ARGS) ) {
	my $data = get_OS_data($dbh);

	my $total = 0;
	foreach my $os (sort keys %$data) {
		push @cols, $os;
		push @vals, $data->{$os};
		$total += $data->{$os};
	}

	graph_data([\@cols, \@vals], $GRAPHIMG, $REPORTSDIR);

	print "<script><!--\nsetWhereAmI('Reports &gt; By Operating System');\n--></script>";

	print '<center>', $q->img({-src=>$GRAPHIMG}), '</center><P>';

	print "<TABLE ALIGN=CENTER CELLPADDING=2 CELLSPACING=2 BORDER=0 WIDTH=200>";
	print "<TR><TH>OS</TH><TH colspan=2>Registrants</TH></TR>";
	
	foreach my $os (sort keys %$data) {
		print "<TR><TD CLASS='gray'>$os</TD>";
		print "<TD align='right' CLASS='gray'>".$data->{$os}."</TD>";
		printf "<td align='right' class='gray'>%2.2f%%</td>",
			100*($data->{$os} / $total);
		print "</tr>\n";
	}	
	print "</TABLE><P>";	

}

sub graph_data {
	my $data       = shift;
	my $GRAPHIMG   = shift;
	my $REPORTSDIR = shift;

	if (-e "$REPORTSDIR/$GRAPHIMG") {
		my $inode = stat ("$REPORTSDIR/$GRAPHIMG");
		my $age   = time() - $inode->mtime;
		return (1) if ($age <= 300);
	}

	my $graph = new GD::Graph::pie(250, 250);

        $graph->set('start_angle'       => 90,
                    'suppress_angle'    => 5,
		    '3d' 		=> 0,
                   );

	$graph->set_value_font(GD::Font->Large);

	my $fh = new FileHandle("> $REPORTSDIR/$GRAPHIMG") || die "Unable to open $GRAPHIMG";
	binmode $fh;
	print $fh $graph->plot($data)->png;
	$fh->close;
}

sub get_OS_data {
	my $dbh = shift;
	my %d;

	my $sql = "SELECT OS FROM register";
        my $all = $dbh->selectall_arrayref($sql);

	map($d{($_->[0] eq 'Unknown' or $_->[0] eq "") ? 'Unknown' : $_->[0]}++, @$all);
	return \%d;
}

</%perl>
