<%doc>
</%doc>
<%args>
	$lock => 0;
	$force => 0;
</%args>
<%perl>
my ($isRoot, $junk) = $m->comp('/Admin/MemberOf', 'acl' => [ 'Admin' ], 'group' => 'default');
my $username = $m->session->{'username'} if exists $m->session->{'username'};
$username ||= "unknown";
if (! $isRoot ) {
	if ($lock) {
		$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
			-user => $username, -msg => [ "$username failed to lock cfg (permission denied)" ]);
		print "NOK lock permission denied\n";
	} else {
		$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
			-user => $username, -msg => [ "$username failed to unlock cfg (permission denied)" ]);
		print "NOK unlock permission denied\n";
	}
	return;
}

my $lstat = $np->db->isConfigLocked();
my $rv;

if ($lock) {
	# we want to lock the config

	if (ref($lstat) eq "HASH") {
		# config is already locked
		if ($lstat->{'user'} ne $m->session->{'username'}) {
			# and not by us
			if ($force) {
				# we're willing to force the issue
				$rv = $np->db->unlockConfig(-rev => $lstat->{'rev'},
							    -user => $m->session->{'username'});
				if ($rv) {
					# fail
					$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
						-user => $username, 
						-msg => [ "$username failed to force unlock cfg ($rv)" ]);
					print "NOK lock unlockfailed $rv\n";
				} else {
					$rv = $np->db->lockConfig(-rev => $lstat->{'rev'},
								  -user => $m->session->{'username'});
					if ($rv) {
						# fail
						print "NOK lock force err=$rv\n";
						$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
							-user => $username, 
							-msg => [ "$username failed to force lock cfg ($rv)" ]);
					} else {
						# success
						print "OK lock\n";
						$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
							-user => $username, 
							-msg => [ "$username forced lock cfg" ]);
					}
				}
			} else {
				# we're not willing to break the lock
				print "NOK lock lockedby=".$lstat->{'user'}."\n";
				$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
					-user => $username, 
					-msg => [ "$username failed lock cfg (lockedby=".$lstat->{'user'}.")" ]);
			}
		} else {
			# config is already locked by us
			print "OK lock alreadylocked\n";
			$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
				-user => $username, 
				-msg => [ "$username already has lock cfg" ]);
		}
	} 
	elsif ($lstat) {
		# an error occurred
		print "NOK lock isConfigLockedErr $lstat\n";
		$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
			-user => $username, 
			-msg => [ "$username failed lock cfg $lstat" ]);
	}
	else {
		# config is not locked, lock it
		$rv = $np->db->getConfig();
		$rv = $np->db->lockConfig(-rev => $rv->{'rev'},
					  -user => $m->session->{'username'});
		if ($rv) {
			# fail
			print "NOK lock err=$rv\n";
			$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
				-user => $username, 
				-msg => [ "$username failed lock cfg $lstat" ]);
		} else {
			# success
			print "OK lock\n";
			$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
				-user => $username, 
				-msg => [ "$username locked cfg" ]);
		}
	}
} else {
	# we want to unlock the config

	if (ref($lstat) eq "HASH") {
		# config is locked
		if ($lstat->{'user'} ne $m->session->{'username'}) {
			# and not by us
			if ($force) {
				# we're willing to force the issue
				$rv = $np->db->unlockConfig(-rev => $lstat->{'rev'},
							    -user => $m->session->{'username'});
				if ($rv) {
					# error
					print "NOK unlock $rv\n";
					$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
						-user => $username, 
						-msg => [ "$username failed force unlock cfg $rv" ]);
				} else {
					print "OK unlock\n";
					$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
						-user => $username, 
						-msg => [ "$username force unlocked cfg" ]);
				}
			} else {
				# we're not willing to break the lock
				print "NOK unlock lockedby=".$lstat->{'user'}."\n";
				$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
					-user => $username, 
					-msg => [ "$username failed unlocked cfg (locked by=".$lstat->{'user'}.")" ]);
			}
		} else {
			# config is locked by us: unlock it
			$rv = $np->db->unlockConfig(-rev => $lstat->{'rev'}, 
						    -user => $m->session->{'username'});
			if ($rv) {
				# fail
				print "NOK unlock $rv\n";
				$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
					-user => $username, 
					-msg => [ "$username failed unlocked cfg $rv" ]);
			} else {
				print "OK unlock\n";
				$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
					-user => $username, 
					-msg => [ "$username unlocked cfg" ]);
			}
		}
	} 
	elsif ($lstat) {
		# an error occurred
		print "NOK unlock $lstat\n";
		$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
			-user => $username, 
			-msg => [ "$username failed unlocked cfg $lstat" ]);
	}
	else {
		# config is not locked: NOP
		print "OK unlock\n";
		$np->db->audit(-severity => 'NOTICE', -ip => $ENV{'REMOTE_ADDR'},
			-user => $username, 
			-msg => [ "$username unlocked cfg (wasn't locked)" ]);
	}
}
</%perl>

